# Author: Salo Shp <saloshp@gmail.com>
#
#    This file is part of Nylox. <https://github.com/nylox/nylox.git>
#
#    Nylox is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Nylox is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Nylox.  If not, see <http://www.gnu.org/licenses/>.
#

---
- name: "Verify that Ansible run-time dependencies are installed and functioning"
  remote_user: "{{ sshauth_remote_user }}"
  shell:
    /bin/true
  changed_when: false
  register: result
  until: result | succeeded
  ignore_errors: yes
  retries: 54
  delay: 10

- name: "Deploy public key to user '{{ sshauth_remote_user }}'"
  remote_user: "{{ sshauth_remote_user }}"
  authorized_key:
    user:      "{{ sshauth_remote_user }}"
    key:       "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    exclusive: "{{ sshauth_exclusive_key }}"
  tags:
  - conf 
  - auth

- name: "Deploy sudoers configuration for '{{ sshauth_remote_user }}'"
  remote_user: "{{ sshauth_remote_user }}"
  become: yes
  template:
    src:   "{{ item }}.j2"
    dest:  "/etc/sudoers.d/{{ item }}"
    owner: root
    group: root
  with_items:
  - 00_sshauth
  tags:
  - conf 
  - auth

- name: "Deploy 'local public key' to remote 'root'"
  remote_user: "{{ sshauth_remote_user }}"
  become: yes
  authorized_key:
    user:      "root"
    key:       "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    exclusive: "{{ sshauth_exclusive_key }}"
  tags:
  - conf 
  - auth

- name: "Slurp remote 'root public key'"
  slurp:
    src: "/root/.ssh/id_rsa.pub"
  register: root_pubkey
  tags:
  - conf
  - auth

- name: "Deploy remote 'root public key' to remote 'root'"
  remote_user: "{{ sshauth_remote_user }}"
  become: yes
  authorized_key:
    user: "root"
    key:  "{{ root_pubkey['content'] | b64decode }}"
  tags:
  - conf
  - auth

