//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//
// See the BIND Administrator's Reference Manual (ARM) for details about the
// configuration located in /usr/share/doc/bind-{version}/Bv9ARM.html

options {
	listen-on port 53 { {{ bind_host }}; };
	listen-on-v6 port 53 { ::1; };
	directory 	"/var/named";
	dump-file 	"/var/named/data/cache_dump.db";
	statistics-file "/var/named/data/named_stats.txt";
	memstatistics-file "/var/named/data/named_mem_stats.txt";
        allow-query     { 127.0.0.1; {{ nets[cnc_net].cidr }}; };
        allow-recursion { 127.0.0.1; {{ nets[cnc_net].cidr }}; };

{% if external_dns is defined and external_dns | length > 0 %}
        forwarders {
{%   for dns in external_dns %}
            {{ dns }};
{%   endfor %}
        };
{% endif %}

	/* 
	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable 
	   recursion. 
	 - If your recursive DNS server has a public IP address, you MUST enable access 
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification 
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface 
	*/
	recursion yes;

	dnssec-enable no;
	dnssec-validation no;

	/* Path to ISC DLV key */
	bindkeys-file "/etc/named.iscdlv.key";

	managed-keys-directory "/var/named/dynamic";

	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";
};

zone "." IN {
	type hint;
{% if external_dns is defined and external_dns | length > 0 %}
    file "named.ca";
{% else %}
    file "/dev/null";
{% endif %}
};

zone "{{ fqdn }}" IN {
        type master;
        file "domain.zone";
        allow-update { none; };
};

zone "{{ nets[cnc_net].cidr | ipaddr('revdns') | regex_replace('^([0]+\\.)*','') }}" IN {
        type master;
        file "domain.rr.zone";
        allow-update { none; };
};

zone "todero.local" IN {
        type forward;
        forward only;
        forwarders {
          // query local consul first
          {{ ips[cnc_net][inventory_hostname].ip }} port 8600;
          // then other nodes
{% for dns_node in groups['lb-nodes'] %}
{%   if inventory_hostname != dns_node %}
          {{ ips[cnc_net][dns_node].ip }} port 8600;
{%   endif %}
{% endfor %}
        };
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";

logging {
    channel xfer-log {
        file "data/named.log" versions 25 size 25m;
            print-category yes;
            print-severity yes;
            severity info;
            print-time yes;
        };
        category xfer-in { xfer-log; };
        category xfer-out { xfer-log; };
        category notify { xfer-log; };
};


