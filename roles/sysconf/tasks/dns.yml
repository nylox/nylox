# Author: Salo Shp <saloshp@gmail.com>
#
#    This file is part of Munio. <https://github.com/salosh/munio.git>
#
#    Munio is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Munio is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Munio.  If not, see <http://www.gnu.org/licenses/>.
#

---
- name: "Deploy hosts file"
  template:
    src:   "{{ item }}.j2"
    dest:  "/etc/{{ item }}"
    owner: "root"
    group: "root"
    mode:  "u=rw,g=r,o=r"
    force: yes
  with_items:
  - hosts
  tags:
  - conf
  - conf_dns

- name: "Configure hostname to '{{ inventory_hostname }}'"
  shell:
    hostnamectl set-hostname {{ inventory_hostname }}
  tags:
  - conf

- name: "Remove old resolv.conf"
  file:
    dest:  /etc/resolv.conf
    state: absent
  when:
  - "hostvars[inventory_hostname].dns_service == 'systemd-resolved'"
  tags:
  - conf

- name: "Create resolvd based resolv.conf"
  file:
    src:   "/run/systemd/resolve/resolv.conf"
    dest:  "/etc/resolv.conf"
    state: link
    owner: root
    group: root
    mode:  "u=rwx,g=rx,o=rx"
    force: yes
  when:
  - "hostvars[inventory_hostname].dns_service == 'systemd-resolved'"
  tags:
  - conf

- name: "deploy systemd-resolved configuration"
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/{{ item }}"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
    force: yes
  with_items:
  - resolved.conf
  when:
  - "hostvars[inventory_hostname].dns_service == 'systemd-resolved'"
  tags:
  - conf

- name: "Final state for service - {{ service_final.state }}"
  service:
    name:    "{{ item }}"
    state:   "{{ service_final.state }}"
    enabled: "{{ service_final.enabled }}"
  with_items:
  - "systemd-resolved"
  when:
  - "hostvars[inventory_hostname].dns_service == 'systemd-resolved'"
  tags:
  - service

#TODO XXX
- name: "Wait for ports"
  wait_for:
    host:    "{{ item.host }}"
    port:    "{{ item.port }}"
    state:   started
    timeout: 5
  with_items:
  - host: "{{ bind_host | d('127.0.0.1') }}"
    port: "{{ bind_port | d('') }}"
  loop_control:
    label: "{{ item.host }}:{{ item.port }}"
  when:
  - "service_final.state != 'stopped'"
  - "not_impleneted_yet is defined"

