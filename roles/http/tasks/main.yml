# Author: Salo Shp <saloshp@gmail.com>
#
#    This file is part of Munio. <https://github.com/salosh/munio.git>
#
#    Munio is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Munio is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Munio.  If not, see <http://www.gnu.org/licenses/>.
#

---
- name: "Install packages"
  vars:
    packages: "{{ conf.packages }}"
  include_tasks: "{{ role_path }}/../common/tasks/{{ ansible_pkg_mgr }}/package.yml"
  tags:
  - bin

- name: "Stop service"
  service:
    name:    "{{ item }}"
    state:   stopped
    enabled: no
  loop: "{{ conf.services }}"
  tags:
  - service

- name: "Deploy '{{ ansible_pkg_mgr }}' based configuration"
  include_tasks: "./conf_{{ ansible_pkg_mgr }}.yml"

- name: "Deploy '{{ ansible_pkg_mgr }}' extra files"
  vars:
    heading: "{{ inventory_hostname }} - Deployed by Munio"
    content: "Last update at - {{ ansible_date_time.iso8601_micro }}"
  template:
    src:   "{{ item }}.j2"
    dest:  "{{ conf.root_dir }}/{{ item }}"
    owner: "{{ conf.username }}"
    group: "{{ conf.groupname }}"
    mode:  "u=rw,g=r,o=r"
    force: yes
  loop:
  - robots.txt
  - README.html
  tags:
  - xtraz

- name: "Final state for service - {{ service_final.state }}"
  service:
    name:    "{{ item }}"
    state:   "{{ service_final.state }}"
    enabled: "{{ service_final.enabled }}"
  loop: "{{ conf.services }}"
  tags:
  - service

- name: "Wait for ports"
  wait_for:
    host:    "{{ item.host }}"
    port:    "{{ item.port }}"
    state:   started
    timeout: 5
  loop:
  - host: "{{ bind_host }}"
    port: "{{ bind_port }}"
  loop_control:
    label: "{{ item.host }}:{{ item.port }}"
  when:
  - "service_final.state != 'stopped'"
  tags:
  - service
  - verify

